// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SalonDeBelleza.src.config;

#nullable disable

namespace SalonDeBelleza.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250317001555_AgregarColaboradorInfo")]
    partial class AgregarColaboradorInfo
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("SalonDeBelleza.src.models.Cita", b =>
                {
                    b.Property<int>("CitaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CitaID"));

                    b.Property<int>("ClienteID")
                        .HasColumnType("int");

                    b.Property<int>("ColaboradorID")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Notas")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Servicio")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("CitaID");

                    b.HasIndex("ClienteID");

                    b.HasIndex("ColaboradorID");

                    b.ToTable("Citas");
                });

            modelBuilder.Entity("SalonDeBelleza.src.models.ColaboradorInfo", b =>
                {
                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<int>("DuracionServicio")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("HorarioEntrada")
                        .HasColumnType("time(6)");

                    b.Property<TimeSpan>("HorarioSalida")
                        .HasColumnType("time(6)");

                    b.Property<string>("TipoServicio")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("UserID");

                    b.ToTable("Colaboradores");
                });

            modelBuilder.Entity("SalonDeBelleza.src.models.Usuario", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("UserID"));

                    b.Property<int?>("ColaboradorInfoUserID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LoginStatus")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.HasKey("UserID");

                    b.HasIndex("ColaboradorInfoUserID");

                    b.ToTable("Usuarios", (string)null);
                });

            modelBuilder.Entity("SalonDeBelleza.src.models.Cita", b =>
                {
                    b.HasOne("SalonDeBelleza.src.models.Usuario", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SalonDeBelleza.src.models.Usuario", "Colaborador")
                        .WithMany()
                        .HasForeignKey("ColaboradorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Colaborador");
                });

            modelBuilder.Entity("SalonDeBelleza.src.models.ColaboradorInfo", b =>
                {
                    b.HasOne("SalonDeBelleza.src.models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SalonDeBelleza.src.models.Usuario", b =>
                {
                    b.HasOne("SalonDeBelleza.src.models.ColaboradorInfo", "ColaboradorInfo")
                        .WithMany()
                        .HasForeignKey("ColaboradorInfoUserID");

                    b.Navigation("ColaboradorInfo");
                });
#pragma warning restore 612, 618
        }
    }
}
