@page
@model SalonDeBelleza.src.Citas.CalendarioModel
@{
}
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Calendario</title>
    <link href="~/css/Calendario.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">

</head>
<body>
   

    <div class="calendario">
        <h2>Reserva tu Cita</h2>
        @if (Model.Rol != "Cliente")
        {
            <label for="email">Ingresar correo del cliente:</label>
            <form >
                <input class="input" type="email" id="EmailBusqueda" placeholder="Correo del cliente" required>
            </form>
        }

        <label for="fecha">Selecciona la fecha:</label>
        <input class="input" type="text" id="fecha" placeholder="Elige la fecha">

        <label for="servicio">Elige el servicio:</label>
        <select class="select" id="servicio" onchange="cargarColaboradores()">
            <option value="">Selecciona un servicio</option>
            @foreach (var servicio in Model.ServiciosD)
            {
                <option value="@servicio">@servicio</option>
            }
        </select>

        <label for="colaborador">Selecciona el colaborador:</label>
        <select class="select" id="colaborador" onchange="cargarHorarios()">
            <option value="">Selecciona un colaborador</option>
        </select>

        <label for="hora">Selecciona la hora:</label>
        <select class="select" id="hora">
            <option value="">Selecciona un horario</option>
        </select>
        <label for="notas">Notas adicionales:</label>
        <input type="text" id="notas" placeholder=" " />
        <input type="hidden" id="UserIDCliente" name="@Model.UserIDCliente" value="@Model.UserIDCliente" />
        <input type="hidden" id="UserRol" name="@Model.Rol" value="@Model.Rol" />
        <button type="button" class="button" onclick="reservarCita(event)">Reservar</button>
    </div>

    <div class="button-container">
        <button onclick="window.location.href='/Home/Administrador'">Regresar</button>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
    <script>
        flatpickr("#fecha", {
            dateFormat: "Y-m-d",
            minDate: "today",
        });
        

        async function BuscarCliente(email){
            try {
            let response = await fetch(`/api/citas/buscar-cliente?email=${email}`);
            console.log("🔎 Código de respuesta:", response.status);
            if (!response.ok) {
                alert("❌ Error al encontrar usuario. Inténtalo de nuevo.");
                return null; // 🔹 Retorna null explícitamente en caso de error
            }

            let data = await response.json();
            console.log(data);
            return data.userID || null; // 🔹 Si no hay UserID, devuelve null en lugar de undefined

            } catch (error) {
                console.error("❌ Error al buscar cliente:", error);
                alert("❌ Ocurrió un error al buscar el cliente.");
                return null; // 🔹 También retorna null si ocurre un error en el fetch
            }
        }
     

        async function cargarColaboradores() {
            let servicio = document.getElementById("servicio").value;
            let response = await fetch(`/api/citas/colaboradores?servicio=${servicio}`);
            let colaboradores = await response.json();

            let selectColaborador = document.getElementById("colaborador");
            selectColaborador.innerHTML = '<option value="">Selecciona un colaborador</option>';
            colaboradores.forEach(col => {
                selectColaborador.innerHTML += `<option value="${col.userID}">${col.nombre}</option>`;
            });
        }

        async function cargarHorarios() {
            let colaboradorId = document.getElementById("colaborador").value;
            let fecha = document.getElementById("fecha").value;
            let response = await fetch(`/api/citas/horarios?colaboradorId=${colaboradorId}&fecha=${fecha}`);
            let horarios = await response.json();

            let selectHora = document.getElementById("hora");
            selectHora.innerHTML = '<option value="">Selecciona un horario</option>';
            horarios.forEach(hora => {
                selectHora.innerHTML += `<option value="${hora}">${hora}</option>`;
            });
        }

        async function reservarCita(event) {
            let rol = document.getElementById("UserRol").value;
            let fecha = document.getElementById("fecha").value;
            let hora = document.getElementById("hora").value;
            let colaborador = document.getElementById("colaborador").value;
            let servicio = document.getElementById("servicio").value;
            let nota = document.getElementById("notas").value;
            let id = document.getElementById("UserIDCliente").value;
            let fechaISO = new Date(`${fecha}T${hora}:00Z`).toISOString();
            if (fecha === "" || hora === "" || colaborador === "" || servicio ==="") {
                alert("Por favor, completa todos los campos.");
                return;
            }
            if(rol=="Administrador"){
                id = await BuscarCliente(document.getElementById("EmailBusqueda").value);
            }
            console.log(id);

            let formData = new URLSearchParams();
            formData.append("clienteID", id);
            formData.append("colaboradorID", colaborador);
            formData.append("fechaHora", fechaISO);
            formData.append("servicio", servicio);
            formData.append("estado", "Pendiente");
            formData.append("notas", nota);

            console.log("Enviando cita al backend");
            console.log(" Enviando cita:", formData.toString());
            try {
                let response = await fetch("/api/citas/reservar", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/x-www-form-urlencoded"
                    },
                    body: formData.toString()
                 });

                if (response.ok) {
                    alert(`✅ Cita reservada para el ${fecha} a las ${hora}.`);
                    location.reload();
                } else {
                    alert("❌ Error al reservar la cita. Inténtalo de nuevo.");
                }
            } catch (error) {
                console.error("Error al reservar cita:", error);
                alert("❌ Ocurrió un error en la conexión.");
            }
        }

    </script>

</body>
</html>
